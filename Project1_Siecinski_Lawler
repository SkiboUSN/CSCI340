/*
 ============================================================================
 Name        : test.c
 Author      :
 Version     :
 Copyright   : Your copyright notice
 Description : Hello World in C, Ansi-style
 ============================================================================
 */

#include <stdio.h>
#include <stdlib.h>
#include <dirent.h>
#include <string.h>
struct Process{
	int pid;
	int ppid;
	int cid[100];
	int cidsize;
	int vsize;
	char comm[20];
};


int main(void) {
	struct dirent *de;

	DIR *dr = opendir("/proc");

	if (dr == NULL)
	{
		printf("Couldn't open directory");
		return 0;

	}
	int pid;
	char pname[50];
	int indentarray[100];
	indentarray[0] = 0;
	int indent = 0;
	int ppid;
	int vmsize;
	char cha1;
	int prevpid = 0;
	int lastindentup = 1;
	FILE *fp;
	while ((de = readdir(dr)) != NULL)
	{
		char init [200];
		memset(init, NULL, 199);
		de-> d_name;
		strcat(init, "/proc/");
		strcat(init, (de->d_name));
		strcat(init, "/stat");
		fp = fopen(init, "r");
		if(fp == NULL){}
		else
		{
			fscanf(fp, "%d %s %c %d %d %d %d %d %d", &pid, &pname, &cha1, &ppid, &vmsize,&vmsize,&vmsize,&vmsize,&vmsize);

			if(prevpid==ppid&&ppid!=2){
                indent++;
                indentarray[lastindentup]=ppid;
                lastindentup++;
			}
			else if(ppid<indentarray[lastindentup-1]){
                int n = 0;
                for(n;indentarray[n]==ppid;n++){}
                for(int d = 0;d<lastindentup-n-1;d++){
                    lastindentup--;
                    indent--;
                }
            }
            int i = 0;
            for(i;i<indent;i++){
                printf("-");
            }
			printf("%d %s %d %d\n", pid, pname, ppid, vmsize);
			prevpid = pid;


	}
	}

	closedir(dr);
	return 0;
}
